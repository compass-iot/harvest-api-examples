// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: compass/harvest/v1alpha1/position_event.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Compass.Harvest.V1Alpha1 {

  /// <summary>Holder for reflection information generated from compass/harvest/v1alpha1/position_event.proto</summary>
  public static partial class PositionEventReflection {

    #region Descriptor
    /// <summary>File descriptor for compass/harvest/v1alpha1/position_event.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PositionEventReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1jb21wYXNzL2hhcnZlc3QvdjFhbHBoYTEvcG9zaXRpb25fZXZlbnQucHJv",
            "dG8SGGNvbXBhc3MuaGFydmVzdC52MWFscGhhMRofZ29vZ2xlL3Byb3RvYnVm",
            "L3RpbWVzdGFtcC5wcm90bxoaY29tcGFzcy90eXBlL2dlby9nZW8ucHJvdG8i",
            "VAoIUG9zaXRpb24SKAoGbGF0bG5nGAEgASgLMhguY29tcGFzcy50eXBlLmdl",
            "by5MYXRMbmcSDQoFc3BlZWQYAiABKAESDwoHYmVhcmluZxgDIAEoASIvCgxB",
            "Y2NlbGVyYXRpb24SCQoBeBgBIAEoARIJCgF5GAIgASgBEgkKAXoYAyABKAEi",
            "MAoER3lybxIMCgRyb2xsGAEgASgBEg0KBXBpdGNoGAIgASgBEgsKA3lhdxgD",
            "IAEoASL3AwoNUG9zaXRpb25FdmVudBISCgp2ZWhpY2xlX2lkGAEgASgJEi0K",
            "CXRpbWVzdGFtcBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAS",
            "PwoOdHJhbnNwb3J0X3R5cGUYAyABKA4yJy5jb21wYXNzLmhhcnZlc3QudjFh",
            "bHBoYTEuVHJhbnNwb3J0VHlwZRI7Cgx2ZWhpY2xlX3R5cGUYBCABKA4yJS5j",
            "b21wYXNzLmhhcnZlc3QudjFhbHBoYTEuVmVoaWNsZVR5cGUSNAoIcG9zaXRp",
            "b24YBSABKAsyIi5jb21wYXNzLmhhcnZlc3QudjFhbHBoYTEuUG9zaXRpb24S",
            "PAoMYWNjZWxlcmF0aW9uGAcgASgLMiYuY29tcGFzcy5oYXJ2ZXN0LnYxYWxw",
            "aGExLkFjY2VsZXJhdGlvbhIsCgRneXJvGAggASgLMh4uY29tcGFzcy5oYXJ2",
            "ZXN0LnYxYWxwaGExLkd5cm8SDwoHdHJpcF9pZBgJIAEoCRJDCgZsYWJlbHMY",
            "BiADKAsyMy5jb21wYXNzLmhhcnZlc3QudjFhbHBoYTEuUG9zaXRpb25FdmVu",
            "dC5MYWJlbHNFbnRyeRotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoF",
            "dmFsdWUYAiABKAk6AjgBKkgKDVRyYW5zcG9ydFR5cGUSHgoaVFJBTlNQT1JU",
            "X1RZUEVfVU5TUEVDSUZJRUQQABILCgdQUklWQVRFEAESCgoGUFVCTElDEAIq",
            "UQoLVmVoaWNsZVR5cGUSHAoYVkVISUNMRV9UWVBFX1VOU1BFQ0lGSUVEEAAS",
            "BwoDQlVTEAESBwoDQ0FSEAISBwoDVkFOEAMSCQoFVFJVQ0sQBEJIWkZ2Mi5j",
            "b21wYXNzLmlvdC9nZW5wcm90by9jb21wYXNzYXBpcy9jb21wYXNzL2hhcnZl",
            "c3QvdjFhbHBoYTE7aGFydmVzdHBiYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Compass.Type.Geo.GeoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Compass.Harvest.V1Alpha1.TransportType), typeof(global::Compass.Harvest.V1Alpha1.VehicleType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Compass.Harvest.V1Alpha1.Position), global::Compass.Harvest.V1Alpha1.Position.Parser, new[]{ "Latlng", "Speed", "Bearing" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Compass.Harvest.V1Alpha1.Acceleration), global::Compass.Harvest.V1Alpha1.Acceleration.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Compass.Harvest.V1Alpha1.Gyro), global::Compass.Harvest.V1Alpha1.Gyro.Parser, new[]{ "Roll", "Pitch", "Yaw" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Compass.Harvest.V1Alpha1.PositionEvent), global::Compass.Harvest.V1Alpha1.PositionEvent.Parser, new[]{ "VehicleId", "Timestamp", "TransportType", "VehicleType", "Position", "Acceleration", "Gyro", "TripId", "Labels" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Enums
  public enum TransportType {
    [pbr::OriginalName("TRANSPORT_TYPE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Anything not public
    /// </summary>
    [pbr::OriginalName("PRIVATE")] Private = 1,
    /// <summary>
    /// Vehicle operated by public services
    /// </summary>
    [pbr::OriginalName("PUBLIC")] Public = 2,
  }

  public enum VehicleType {
    [pbr::OriginalName("VEHICLE_TYPE_UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("BUS")] Bus = 1,
    [pbr::OriginalName("CAR")] Car = 2,
    [pbr::OriginalName("VAN")] Van = 3,
    [pbr::OriginalName("TRUCK")] Truck = 4,
  }

  #endregion

  #region Messages
  public sealed partial class Position : pb::IMessage<Position>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Position> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Compass.Harvest.V1Alpha1.PositionEventReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position(Position other) : this() {
      latlng_ = other.latlng_ != null ? other.latlng_.Clone() : null;
      speed_ = other.speed_;
      bearing_ = other.bearing_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position Clone() {
      return new Position(this);
    }

    /// <summary>Field number for the "latlng" field.</summary>
    public const int LatlngFieldNumber = 1;
    private global::Compass.Type.Geo.LatLng latlng_;
    /// <summary>
    /// lat and lng of the vehicle position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Compass.Type.Geo.LatLng Latlng {
      get { return latlng_; }
      set {
        latlng_ = value;
      }
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 2;
    private double speed_;
    /// <summary>
    /// speed of vehicle in km/h
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Speed {
      get { return speed_; }
      set {
        speed_ = value;
      }
    }

    /// <summary>Field number for the "bearing" field.</summary>
    public const int BearingFieldNumber = 3;
    private double bearing_;
    /// <summary>
    /// [optional] bearing of vehicle in degrees [0, 360)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Bearing {
      get { return bearing_; }
      set {
        bearing_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Position);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Position other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Latlng, other.Latlng)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Speed, other.Speed)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Bearing, other.Bearing)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (latlng_ != null) hash ^= Latlng.GetHashCode();
      if (Speed != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Speed);
      if (Bearing != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Bearing);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (latlng_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Latlng);
      }
      if (Speed != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Speed);
      }
      if (Bearing != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Bearing);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (latlng_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Latlng);
      }
      if (Speed != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Speed);
      }
      if (Bearing != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Bearing);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (latlng_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Latlng);
      }
      if (Speed != 0D) {
        size += 1 + 8;
      }
      if (Bearing != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Position other) {
      if (other == null) {
        return;
      }
      if (other.latlng_ != null) {
        if (latlng_ == null) {
          Latlng = new global::Compass.Type.Geo.LatLng();
        }
        Latlng.MergeFrom(other.Latlng);
      }
      if (other.Speed != 0D) {
        Speed = other.Speed;
      }
      if (other.Bearing != 0D) {
        Bearing = other.Bearing;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (latlng_ == null) {
              Latlng = new global::Compass.Type.Geo.LatLng();
            }
            input.ReadMessage(Latlng);
            break;
          }
          case 17: {
            Speed = input.ReadDouble();
            break;
          }
          case 25: {
            Bearing = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (latlng_ == null) {
              Latlng = new global::Compass.Type.Geo.LatLng();
            }
            input.ReadMessage(Latlng);
            break;
          }
          case 17: {
            Speed = input.ReadDouble();
            break;
          }
          case 25: {
            Bearing = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// Acceleration is measured in gforce
  /// so if the vehicle is accelerating at 9.8m/s^2 (newtons) in the x axis,
  /// the input to this api should be Acceleration { 1, 0, 0 }
  /// if it is decelerating at 1m/s^2, the input to this api should be { -0.102, 0, 0 } (0.102 ~= 1/9.8)
  /// if this is confusing, don't worry to hard about getting it correct, we can apply provider specific unit conversions post ingestion, just be consistent and let us know
  /// Note that the vertical axis in the diagram is the z axis, not the y axis
  /// Also note the + and - signs in the diagram which direction should be positive and negative within each axis
  ///
  /// ![alt text](https://storage.googleapis.com/compass-public-docs/static/acc_gyro.png)
  /// </summary>
  public sealed partial class Acceleration : pb::IMessage<Acceleration>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Acceleration> _parser = new pb::MessageParser<Acceleration>(() => new Acceleration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Acceleration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Compass.Harvest.V1Alpha1.PositionEventReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Acceleration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Acceleration(Acceleration other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Acceleration Clone() {
      return new Acceleration(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private double x_;
    /// <summary>
    /// acceleration / braking
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private double y_;
    /// <summary>
    /// side to side / turning force
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private double z_;
    /// <summary>
    /// vertical up / down force
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Acceleration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Acceleration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
      if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
      if (Z != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(X);
      }
      if (Y != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Y);
      }
      if (Z != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(X);
      }
      if (Y != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Y);
      }
      if (Z != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (X != 0D) {
        size += 1 + 8;
      }
      if (Y != 0D) {
        size += 1 + 8;
      }
      if (Z != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Acceleration other) {
      if (other == null) {
        return;
      }
      if (other.X != 0D) {
        X = other.X;
      }
      if (other.Y != 0D) {
        Y = other.Y;
      }
      if (other.Z != 0D) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            X = input.ReadDouble();
            break;
          }
          case 17: {
            Y = input.ReadDouble();
            break;
          }
          case 25: {
            Z = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            X = input.ReadDouble();
            break;
          }
          case 17: {
            Y = input.ReadDouble();
            break;
          }
          case 25: {
            Z = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// Rotational data is measured in degrees per second
  /// A positive value for roll, pitch or yaw is defined in the anti-clockwise direction when facing the positive direction of it's axis
  ///
  /// See acceleration diagram for more details
  /// </summary>
  public sealed partial class Gyro : pb::IMessage<Gyro>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Gyro> _parser = new pb::MessageParser<Gyro>(() => new Gyro());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Gyro> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Compass.Harvest.V1Alpha1.PositionEventReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Gyro() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Gyro(Gyro other) : this() {
      roll_ = other.roll_;
      pitch_ = other.pitch_;
      yaw_ = other.yaw_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Gyro Clone() {
      return new Gyro(this);
    }

    /// <summary>Field number for the "roll" field.</summary>
    public const int RollFieldNumber = 1;
    private double roll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Roll {
      get { return roll_; }
      set {
        roll_ = value;
      }
    }

    /// <summary>Field number for the "pitch" field.</summary>
    public const int PitchFieldNumber = 2;
    private double pitch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Pitch {
      get { return pitch_; }
      set {
        pitch_ = value;
      }
    }

    /// <summary>Field number for the "yaw" field.</summary>
    public const int YawFieldNumber = 3;
    private double yaw_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Yaw {
      get { return yaw_; }
      set {
        yaw_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Gyro);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Gyro other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Roll, other.Roll)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Pitch, other.Pitch)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Yaw, other.Yaw)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Roll != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Roll);
      if (Pitch != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Pitch);
      if (Yaw != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Yaw);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Roll != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Roll);
      }
      if (Pitch != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Pitch);
      }
      if (Yaw != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Yaw);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Roll != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Roll);
      }
      if (Pitch != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Pitch);
      }
      if (Yaw != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Yaw);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Roll != 0D) {
        size += 1 + 8;
      }
      if (Pitch != 0D) {
        size += 1 + 8;
      }
      if (Yaw != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Gyro other) {
      if (other == null) {
        return;
      }
      if (other.Roll != 0D) {
        Roll = other.Roll;
      }
      if (other.Pitch != 0D) {
        Pitch = other.Pitch;
      }
      if (other.Yaw != 0D) {
        Yaw = other.Yaw;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Roll = input.ReadDouble();
            break;
          }
          case 17: {
            Pitch = input.ReadDouble();
            break;
          }
          case 25: {
            Yaw = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Roll = input.ReadDouble();
            break;
          }
          case 17: {
            Pitch = input.ReadDouble();
            break;
          }
          case 25: {
            Yaw = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  /// - Either VehicleID or TripID MUST be present.
  /// - Ideally both, followed by just VehicleID, followed by just TripID.
  /// - Position, VehicleType and TransportType are required
  /// - Any extra metadata can be added in 'labels' and will be greatly appreciated!
  /// </summary>
  public sealed partial class PositionEvent : pb::IMessage<PositionEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PositionEvent> _parser = new pb::MessageParser<PositionEvent>(() => new PositionEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PositionEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Compass.Harvest.V1Alpha1.PositionEventReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionEvent(PositionEvent other) : this() {
      vehicleId_ = other.vehicleId_;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      transportType_ = other.transportType_;
      vehicleType_ = other.vehicleType_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      acceleration_ = other.acceleration_ != null ? other.acceleration_.Clone() : null;
      gyro_ = other.gyro_ != null ? other.gyro_.Clone() : null;
      tripId_ = other.tripId_;
      labels_ = other.labels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PositionEvent Clone() {
      return new PositionEvent(this);
    }

    /// <summary>Field number for the "vehicle_id" field.</summary>
    public const int VehicleIdFieldNumber = 1;
    private string vehicleId_ = "";
    /// <summary>
    /// Unique identifier for the vehicle. device_id is a sufficiently good proxy for this field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VehicleId {
      get { return vehicleId_; }
      set {
        vehicleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// Timestamp that event occured
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "transport_type" field.</summary>
    public const int TransportTypeFieldNumber = 3;
    private global::Compass.Harvest.V1Alpha1.TransportType transportType_ = global::Compass.Harvest.V1Alpha1.TransportType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Compass.Harvest.V1Alpha1.TransportType TransportType {
      get { return transportType_; }
      set {
        transportType_ = value;
      }
    }

    /// <summary>Field number for the "vehicle_type" field.</summary>
    public const int VehicleTypeFieldNumber = 4;
    private global::Compass.Harvest.V1Alpha1.VehicleType vehicleType_ = global::Compass.Harvest.V1Alpha1.VehicleType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Compass.Harvest.V1Alpha1.VehicleType VehicleType {
      get { return vehicleType_; }
      set {
        vehicleType_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 5;
    private global::Compass.Harvest.V1Alpha1.Position position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Compass.Harvest.V1Alpha1.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "acceleration" field.</summary>
    public const int AccelerationFieldNumber = 7;
    private global::Compass.Harvest.V1Alpha1.Acceleration acceleration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Compass.Harvest.V1Alpha1.Acceleration Acceleration {
      get { return acceleration_; }
      set {
        acceleration_ = value;
      }
    }

    /// <summary>Field number for the "gyro" field.</summary>
    public const int GyroFieldNumber = 8;
    private global::Compass.Harvest.V1Alpha1.Gyro gyro_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Compass.Harvest.V1Alpha1.Gyro Gyro {
      get { return gyro_; }
      set {
        gyro_ = value;
      }
    }

    /// <summary>Field number for the "trip_id" field.</summary>
    public const int TripIdFieldNumber = 9;
    private string tripId_ = "";
    /// <summary>
    /// Id linking points of the same trip
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TripId {
      get { return tripId_; }
      set {
        tripId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 6;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 50);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// extra metadata not suppported by our api that may be useful :)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PositionEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PositionEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VehicleId != other.VehicleId) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (TransportType != other.TransportType) return false;
      if (VehicleType != other.VehicleType) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Acceleration, other.Acceleration)) return false;
      if (!object.Equals(Gyro, other.Gyro)) return false;
      if (TripId != other.TripId) return false;
      if (!Labels.Equals(other.Labels)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (VehicleId.Length != 0) hash ^= VehicleId.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (TransportType != global::Compass.Harvest.V1Alpha1.TransportType.Unspecified) hash ^= TransportType.GetHashCode();
      if (VehicleType != global::Compass.Harvest.V1Alpha1.VehicleType.Unspecified) hash ^= VehicleType.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (acceleration_ != null) hash ^= Acceleration.GetHashCode();
      if (gyro_ != null) hash ^= Gyro.GetHashCode();
      if (TripId.Length != 0) hash ^= TripId.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VehicleId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VehicleId);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Timestamp);
      }
      if (TransportType != global::Compass.Harvest.V1Alpha1.TransportType.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) TransportType);
      }
      if (VehicleType != global::Compass.Harvest.V1Alpha1.VehicleType.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) VehicleType);
      }
      if (position_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Position);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (acceleration_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Acceleration);
      }
      if (gyro_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Gyro);
      }
      if (TripId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(TripId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VehicleId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VehicleId);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Timestamp);
      }
      if (TransportType != global::Compass.Harvest.V1Alpha1.TransportType.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) TransportType);
      }
      if (VehicleType != global::Compass.Harvest.V1Alpha1.VehicleType.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) VehicleType);
      }
      if (position_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Position);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (acceleration_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Acceleration);
      }
      if (gyro_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Gyro);
      }
      if (TripId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(TripId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (VehicleId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VehicleId);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (TransportType != global::Compass.Harvest.V1Alpha1.TransportType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TransportType);
      }
      if (VehicleType != global::Compass.Harvest.V1Alpha1.VehicleType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VehicleType);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (acceleration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Acceleration);
      }
      if (gyro_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gyro);
      }
      if (TripId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TripId);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PositionEvent other) {
      if (other == null) {
        return;
      }
      if (other.VehicleId.Length != 0) {
        VehicleId = other.VehicleId;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.TransportType != global::Compass.Harvest.V1Alpha1.TransportType.Unspecified) {
        TransportType = other.TransportType;
      }
      if (other.VehicleType != global::Compass.Harvest.V1Alpha1.VehicleType.Unspecified) {
        VehicleType = other.VehicleType;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Compass.Harvest.V1Alpha1.Position();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.acceleration_ != null) {
        if (acceleration_ == null) {
          Acceleration = new global::Compass.Harvest.V1Alpha1.Acceleration();
        }
        Acceleration.MergeFrom(other.Acceleration);
      }
      if (other.gyro_ != null) {
        if (gyro_ == null) {
          Gyro = new global::Compass.Harvest.V1Alpha1.Gyro();
        }
        Gyro.MergeFrom(other.Gyro);
      }
      if (other.TripId.Length != 0) {
        TripId = other.TripId;
      }
      labels_.Add(other.labels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VehicleId = input.ReadString();
            break;
          }
          case 18: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 24: {
            TransportType = (global::Compass.Harvest.V1Alpha1.TransportType) input.ReadEnum();
            break;
          }
          case 32: {
            VehicleType = (global::Compass.Harvest.V1Alpha1.VehicleType) input.ReadEnum();
            break;
          }
          case 42: {
            if (position_ == null) {
              Position = new global::Compass.Harvest.V1Alpha1.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 50: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 58: {
            if (acceleration_ == null) {
              Acceleration = new global::Compass.Harvest.V1Alpha1.Acceleration();
            }
            input.ReadMessage(Acceleration);
            break;
          }
          case 66: {
            if (gyro_ == null) {
              Gyro = new global::Compass.Harvest.V1Alpha1.Gyro();
            }
            input.ReadMessage(Gyro);
            break;
          }
          case 74: {
            TripId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            VehicleId = input.ReadString();
            break;
          }
          case 18: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 24: {
            TransportType = (global::Compass.Harvest.V1Alpha1.TransportType) input.ReadEnum();
            break;
          }
          case 32: {
            VehicleType = (global::Compass.Harvest.V1Alpha1.VehicleType) input.ReadEnum();
            break;
          }
          case 42: {
            if (position_ == null) {
              Position = new global::Compass.Harvest.V1Alpha1.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 50: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 58: {
            if (acceleration_ == null) {
              Acceleration = new global::Compass.Harvest.V1Alpha1.Acceleration();
            }
            input.ReadMessage(Acceleration);
            break;
          }
          case 66: {
            if (gyro_ == null) {
              Gyro = new global::Compass.Harvest.V1Alpha1.Gyro();
            }
            input.ReadMessage(Gyro);
            break;
          }
          case 74: {
            TripId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
